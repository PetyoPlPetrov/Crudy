version: '3'
services:
  # kong:
  #     image: kong:latest
  #     ports:
  #       - 8000:8000
  #       - 8444:8444
  #     volumes:
  #     - ./kong/kong.conf:/etc/kong/kong.conf

      # - ./kong/kong.yml:/etc/kong/kong.yml
  nginx:
    image: nginx:alpine
    ports:
      - 2000:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    # depends_on:
    #   app:
    #      condition: service_healthy
    #      restart: true

  db:
    image: postgres:13.1
    restart: always
    env_file:
      - ./.env
    environment:
          # POSTGRES_DB: ${POSTGRES_DB}
          POSTGRES_USER: ${DB_USER}
          POSTGRES_PASSWORD: ${DB_PASSWORD}
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:15672"]
    #   interval: 10s
    #   retries: 5
    #   start_period: 30s
    #   timeout: 10s
    # volumes:
    #   - ./postgres/data:/var/lib/postgresql/data
    #   - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5432:5432
  
  app:
    build: .
    volumes:
      - .:/usr/src/app
      -  /usr/src/app/node_modules
    # container_name: docker-node-auth
    restart: always
    # ports:
      # - 2000:3002
    command: bash -c /usr/src/app/start.sh
    env_file: ./.env
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:3002"]
    #   interval: 10s
    #   retries: 5
    #   start_period: 10s
    #   timeout: 10s
    # depends_on:
    #   db:
    #     condition: service_healthy
    #     restart: true
  
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080